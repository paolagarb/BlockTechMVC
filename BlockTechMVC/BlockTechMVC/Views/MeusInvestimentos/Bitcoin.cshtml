
@{
    ViewData["Title"] = "Bitcoin";

    var bitcoinQuantidade = ViewBag.QuantidadaTotalBitcoin;
    var bitcoinValorReal = ViewBag.QuantidadaEmRealBitcoin;
    var bitcoinInvestimento = Convert.ToDouble(ViewBag.ValorInvestidoBitcoin);
    var lucroOuPerda = Convert.ToDouble(ViewBag.LucroOuPerda);

    var diasList = ViewBag.Ultimos7Dias;
    var dias = Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(diasList));
    var valores7Dias = ViewBag.ValorBitcoin7Dias;
    var valores = Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(valores7Dias));


    var ethereumInvestimento = Convert.ToDouble(ViewBag.ValorInvestidoEthereum);
    var bitcoinCashInvestimento = Convert.ToDouble(ViewBag.ValorInvestidoBitcoinCash);
    var xrpInvestimento = Convert.ToDouble(ViewBag.ValorInvestidoXrp);
    var paxGoldInvestimento = Convert.ToDouble(ViewBag.ValorInvestidoPaxGold);
    var litecoinInvestimento = Convert.ToDouble(ViewBag.ValorInvestidoLitecoin);

    //adm
    var bitcoinTotal = ViewBag.Ultimos7DiasAdm;
    var bitcoinTotalAdm = Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(bitcoinTotal));
    var admBitcoinTotal = ViewBag.Bitcoin;
    var BitcoinValorRS = ViewBag.BitcoinValorRS;
    var BitcoinInvestido = ViewBag.BitcoinInvestido;

    var lucroOuPerdaAdm = Convert.ToDouble(ViewBag.LucroOuPerdaAdm);
}

@if (!User.IsInRole("Admin"))
{
    <div class="flex-row">

        <a asp-action="Index" class="btn btn-outline-dark">Investimentos</a>
        @if (bitcoinInvestimento > 0)
        {
            <a asp-action="Bitcoin" class="btn btn-outline-dark">Bitcoin</a>
        }
        @if (ethereumInvestimento > 0)
        {
            <a asp-action="Ethereum" class="btn btn-outline-dark">Ethereum</a>
        }
        @if (bitcoinCashInvestimento > 0)
        {
            <a asp-action="BitcoinCash" class="btn btn-outline-dark">Bitcoin Cash</a>
        }
        @if (xrpInvestimento > 0)
        {
            <a asp-action="Xrp" class="btn btn-outline-dark">XRP</a>
        }
        @if (paxGoldInvestimento > 0)
        {
            <a asp-action="PaxGold" class="btn btn-outline-dark">PAX Gold</a>
        }
        @if (litecoinInvestimento > 0)
        {
            <a asp-action="Litecoin" class="btn btn-outline-dark">Litecoin</a>
        }
    </div>
    <br />
    <h1 class="text-center">@ViewData["Title"]</h1>

    <hr />

    <h5>Quantidade de Bitcoin: @bitcoinQuantidade</h5>
    <h5>Valor Investido - Bitcoin: R$ @bitcoinInvestimento</h5>
    <h5>Valor Atual - Bitcoin: R$ @bitcoinValorReal</h5>

    @if (lucroOuPerda > 0)
    {
        <h5>Lucro: R$ @lucroOuPerda</h5>
    }
    else
    {
        if (lucroOuPerda < 0)
        {
            lucroOuPerda = lucroOuPerda * (-1);
        }
        <h5>Perda: R$ @lucroOuPerda</h5>
    }

    <br />

    <canvas id="graficoBitcoin" width="400" height="150">
    </canvas>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

        <script>
        $(document)
            .ready(function () {

                var ctx = document.getElementById('graficoBitcoin').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: @dias,
                        datasets: [{
                            data: @valores,
                            backgroundColor: 'rgba(250, 150, 26, 0.0)',
                            borderColor: 'rgba(250, 150, 26, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        legend: {
                            display: false
                        },
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: false
                                }
                            }]
                        }
                    }
                });

            });
        </script>

    }
}
else
{
    <div class="flex-row">
        <a asp-action="Index" class="btn btn-outline-dark">Investimentos</a>
        <a asp-action="Bitcoin" class="btn btn-outline-dark">Bitcoin</a>
        <a asp-action="Ethereum" class="btn btn-outline-dark">Ethereum</a>
        <a asp-action="BitcoinCash" class="btn btn-outline-dark">Bitcoin Cash</a>
        <a asp-action="Xrp" class="btn btn-outline-dark">XRP</a>
        <a asp-action="PaxGold" class="btn btn-outline-dark">PAX Gold</a>
        <a asp-action="Litecoin" class="btn btn-outline-dark">Litecoin</a>
    </div>
    <br />
    <h1 class="text-center">@ViewData["Title"]</h1>
    <br />
    <h5>Quantidade de Bitcoin: @admBitcoinTotal</h5>
    <h5>Valor Investido - Bitcoin: R$ @BitcoinInvestido</h5>
    <h5>Valor Atual - Bitcoin: R$ @BitcoinValorRS</h5>
    @if (lucroOuPerdaAdm > 0)
    {
        <h5>Lucro: R$ @lucroOuPerdaAdm</h5>
    }
    else
    {
        if (lucroOuPerdaAdm < 0)
        {
            lucroOuPerdaAdm = lucroOuPerdaAdm * (-1);
        }
        <h5>Perda: R$ @lucroOuPerdaAdm</h5>
    }

    
<br />

<canvas id="graficoBitcoin" width="400" height="150">
</canvas>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

    <script>
        $(document)
            .ready(function () {

                var ctx = document.getElementById('graficoBitcoin').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: @dias,
                        datasets: [{
                            data: @bitcoinTotalAdm,
                            backgroundColor: 'rgba(250, 150, 26, 0.0)',
                            borderColor: 'rgba(250, 150, 26, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        legend: {
                            display: false
                        },
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: false
                                }
                            }]
                        }
                    }
                });

            });
    </script>

}
}
